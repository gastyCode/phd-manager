@page "/login"

@using PhDManager.Core.IServices
@using PhDManager.Core.ValidationModels

@inject IUserService UserService
@inject NavigationManager NavigationManager

<PageTitle>Log in</PageTitle>

<RadzenStack class="full-size" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
    <RadzenImage Style="width: 20em;" Path="fingerprint.svg" />
    <RadzenText TextStyle="TextStyle.H4">Log in</RadzenText>

    <RadzenAlert class="width-half" @bind-Visible="@_errorVisible" AlertStyle="AlertStyle.Danger" Close="@OnClose">
        The credentials you provided are invalid. Please try again.
    </RadzenAlert>

    <EditForm class="width-half" Model="UserLogin" FormName="login" OnSubmit="@HandleSubmit">
        <AntiforgeryToken />

        <RadzenStack>
            <RadzenLabel For="@((UserLogin user) => user.Username)" Text="Username" Component="Username" />
            <RadzenTextBox @bind-Value="@UserLogin.Username" Name="Username" />

            <RadzenLabel For="@((UserLogin user) => user.Password)" Text="Password" Component="Password" />
            <RadzenPassword @bind-Value="@UserLogin.Password" Name="Password" />


            <RadzenButton class="fit" Text="Login" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Primary" />
        </RadzenStack>
    </EditForm>
</RadzenStack>

@code {
    [SupplyParameterFromForm]
    private UserLogin UserLogin { get; set; } = default!;

    protected override void OnInitialized()
    {
        UserLogin = new();
    }

    private bool _errorVisible = false;

    public void OnClose()
    {
        _errorVisible = false;
    }

    public async Task HandleSubmit()
    {
        var result = await UserService.Login(UserLogin);

        if (result is null)
        {
            _errorVisible = true;
            return;
        }
        NavigationManager.NavigateTo("/", true);
    }
}
